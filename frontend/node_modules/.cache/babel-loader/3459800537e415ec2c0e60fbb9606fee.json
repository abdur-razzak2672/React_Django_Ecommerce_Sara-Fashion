{"ast":null,"code":"import * as React from 'react';\nimport { useContext } from 'react';\nimport classNames from 'classnames';\nimport AccordionContext, { isAccordionItemSelected } from './AccordionContext';\nimport AccordionItemContext from './AccordionItemContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function useAccordionButton(eventKey, onClick) {\n  const {\n    activeEventKey,\n    onSelect,\n    alwaysOpen\n  } = useContext(AccordionContext);\n  return e => {\n    /*\r\n      Compare the event key in context with the given event key.\r\n      If they are the same, then collapse the component.\r\n    */\n    let eventKeyPassed = eventKey === activeEventKey ? null : eventKey;\n\n    if (alwaysOpen) {\n      if (Array.isArray(activeEventKey)) {\n        if (activeEventKey.includes(eventKey)) {\n          eventKeyPassed = activeEventKey.filter(k => k !== eventKey);\n        } else {\n          eventKeyPassed = [...activeEventKey, eventKey];\n        }\n      } else {\n        // activeEventKey is undefined.\n        eventKeyPassed = [eventKey];\n      }\n    }\n\n    onSelect == null ? void 0 : onSelect(eventKeyPassed, e);\n    onClick == null ? void 0 : onClick(e);\n  };\n}\nconst AccordionButton = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n    // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n    as: Component = 'button',\n    bsPrefix,\n    className,\n    onClick,\n    ...props\n  } = _ref;\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'accordion-button');\n  const {\n    eventKey\n  } = useContext(AccordionItemContext);\n  const accordionOnClick = useAccordionButton(eventKey, onClick);\n  const {\n    activeEventKey\n  } = useContext(AccordionContext);\n\n  if (Component === 'button') {\n    props.type = 'button';\n  }\n\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    onClick: accordionOnClick,\n    ...props,\n    \"aria-expanded\": eventKey === activeEventKey,\n    className: classNames(className, bsPrefix, !isAccordionItemSelected(activeEventKey, eventKey) && 'collapsed')\n  });\n});\nAccordionButton.displayName = 'AccordionButton';\nexport default AccordionButton;","map":{"version":3,"names":["React","useContext","classNames","AccordionContext","isAccordionItemSelected","AccordionItemContext","useBootstrapPrefix","jsx","_jsx","useAccordionButton","eventKey","onClick","activeEventKey","onSelect","alwaysOpen","e","eventKeyPassed","Array","isArray","includes","filter","k","AccordionButton","forwardRef","ref","as","Component","bsPrefix","className","props","accordionOnClick","type","displayName"],"sources":["D:/razzak/React_Django_Ecommerce_Sara-Fashion/frontend/node_modules/react-bootstrap/esm/AccordionButton.js"],"sourcesContent":["import * as React from 'react';\r\nimport { useContext } from 'react';\r\nimport classNames from 'classnames';\r\nimport AccordionContext, { isAccordionItemSelected } from './AccordionContext';\r\nimport AccordionItemContext from './AccordionItemContext';\r\nimport { useBootstrapPrefix } from './ThemeProvider';\r\nimport { jsx as _jsx } from \"react/jsx-runtime\";\r\nexport function useAccordionButton(eventKey, onClick) {\r\n  const {\r\n    activeEventKey,\r\n    onSelect,\r\n    alwaysOpen\r\n  } = useContext(AccordionContext);\r\n  return e => {\r\n    /*\r\n      Compare the event key in context with the given event key.\r\n      If they are the same, then collapse the component.\r\n    */\r\n    let eventKeyPassed = eventKey === activeEventKey ? null : eventKey;\r\n\r\n    if (alwaysOpen) {\r\n      if (Array.isArray(activeEventKey)) {\r\n        if (activeEventKey.includes(eventKey)) {\r\n          eventKeyPassed = activeEventKey.filter(k => k !== eventKey);\r\n        } else {\r\n          eventKeyPassed = [...activeEventKey, eventKey];\r\n        }\r\n      } else {\r\n        // activeEventKey is undefined.\r\n        eventKeyPassed = [eventKey];\r\n      }\r\n    }\r\n\r\n    onSelect == null ? void 0 : onSelect(eventKeyPassed, e);\r\n    onClick == null ? void 0 : onClick(e);\r\n  };\r\n}\r\nconst AccordionButton = /*#__PURE__*/React.forwardRef(({\r\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\r\n  as: Component = 'button',\r\n  bsPrefix,\r\n  className,\r\n  onClick,\r\n  ...props\r\n}, ref) => {\r\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'accordion-button');\r\n  const {\r\n    eventKey\r\n  } = useContext(AccordionItemContext);\r\n  const accordionOnClick = useAccordionButton(eventKey, onClick);\r\n  const {\r\n    activeEventKey\r\n  } = useContext(AccordionContext);\r\n\r\n  if (Component === 'button') {\r\n    props.type = 'button';\r\n  }\r\n\r\n  return /*#__PURE__*/_jsx(Component, {\r\n    ref: ref,\r\n    onClick: accordionOnClick,\r\n    ...props,\r\n    \"aria-expanded\": eventKey === activeEventKey,\r\n    className: classNames(className, bsPrefix, !isAccordionItemSelected(activeEventKey, eventKey) && 'collapsed')\r\n  });\r\n});\r\nAccordionButton.displayName = 'AccordionButton';\r\nexport default AccordionButton;"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,UAAT,QAA2B,OAA3B;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,gBAAP,IAA2BC,uBAA3B,QAA0D,oBAA1D;AACA,OAAOC,oBAAP,MAAiC,wBAAjC;AACA,SAASC,kBAAT,QAAmC,iBAAnC;AACA,SAASC,GAAG,IAAIC,IAAhB,QAA4B,mBAA5B;AACA,OAAO,SAASC,kBAAT,CAA4BC,QAA5B,EAAsCC,OAAtC,EAA+C;EACpD,MAAM;IACJC,cADI;IAEJC,QAFI;IAGJC;EAHI,IAIFb,UAAU,CAACE,gBAAD,CAJd;EAKA,OAAOY,CAAC,IAAI;IACV;AACJ;AACA;AACA;IACI,IAAIC,cAAc,GAAGN,QAAQ,KAAKE,cAAb,GAA8B,IAA9B,GAAqCF,QAA1D;;IAEA,IAAII,UAAJ,EAAgB;MACd,IAAIG,KAAK,CAACC,OAAN,CAAcN,cAAd,CAAJ,EAAmC;QACjC,IAAIA,cAAc,CAACO,QAAf,CAAwBT,QAAxB,CAAJ,EAAuC;UACrCM,cAAc,GAAGJ,cAAc,CAACQ,MAAf,CAAsBC,CAAC,IAAIA,CAAC,KAAKX,QAAjC,CAAjB;QACD,CAFD,MAEO;UACLM,cAAc,GAAG,CAAC,GAAGJ,cAAJ,EAAoBF,QAApB,CAAjB;QACD;MACF,CAND,MAMO;QACL;QACAM,cAAc,GAAG,CAACN,QAAD,CAAjB;MACD;IACF;;IAEDG,QAAQ,IAAI,IAAZ,GAAmB,KAAK,CAAxB,GAA4BA,QAAQ,CAACG,cAAD,EAAiBD,CAAjB,CAApC;IACAJ,OAAO,IAAI,IAAX,GAAkB,KAAK,CAAvB,GAA2BA,OAAO,CAACI,CAAD,CAAlC;EACD,CAtBD;AAuBD;AACD,MAAMO,eAAe,GAAG,aAAatB,KAAK,CAACuB,UAAN,CAAiB,OAOnDC,GAPmD,KAO3C;EAAA,IAP4C;IACrD;IACAC,EAAE,EAAEC,SAAS,GAAG,QAFqC;IAGrDC,QAHqD;IAIrDC,SAJqD;IAKrDjB,OALqD;IAMrD,GAAGkB;EANkD,CAO5C;EACTF,QAAQ,GAAGrB,kBAAkB,CAACqB,QAAD,EAAW,kBAAX,CAA7B;EACA,MAAM;IACJjB;EADI,IAEFT,UAAU,CAACI,oBAAD,CAFd;EAGA,MAAMyB,gBAAgB,GAAGrB,kBAAkB,CAACC,QAAD,EAAWC,OAAX,CAA3C;EACA,MAAM;IACJC;EADI,IAEFX,UAAU,CAACE,gBAAD,CAFd;;EAIA,IAAIuB,SAAS,KAAK,QAAlB,EAA4B;IAC1BG,KAAK,CAACE,IAAN,GAAa,QAAb;EACD;;EAED,OAAO,aAAavB,IAAI,CAACkB,SAAD,EAAY;IAClCF,GAAG,EAAEA,GAD6B;IAElCb,OAAO,EAAEmB,gBAFyB;IAGlC,GAAGD,KAH+B;IAIlC,iBAAiBnB,QAAQ,KAAKE,cAJI;IAKlCgB,SAAS,EAAE1B,UAAU,CAAC0B,SAAD,EAAYD,QAAZ,EAAsB,CAACvB,uBAAuB,CAACQ,cAAD,EAAiBF,QAAjB,CAAxB,IAAsD,WAA5E;EALa,CAAZ,CAAxB;AAOD,CA5BoC,CAArC;AA6BAY,eAAe,CAACU,WAAhB,GAA8B,iBAA9B;AACA,eAAeV,eAAf"},"metadata":{},"sourceType":"module"}