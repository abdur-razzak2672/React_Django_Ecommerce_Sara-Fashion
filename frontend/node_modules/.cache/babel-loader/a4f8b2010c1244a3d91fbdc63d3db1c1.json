{"ast":null,"code":"import addClass from 'dom-helpers/addClass';\nimport removeClass from 'dom-helpers/removeClass';\nimport css from 'dom-helpers/css';\nimport getScrollbarSize from 'dom-helpers/scrollbarSize';\nimport isOverflowing from './isOverflowing';\nimport { ariaHidden, hideSiblings, showSiblings } from './manageAriaHidden';\n\nfunction findIndexOf(arr, cb) {\n  var idx = -1;\n  arr.some(function (d, i) {\n    if (cb(d, i)) {\n      idx = i;\n      return true;\n    }\n\n    return false;\n  });\n  return idx;\n}\n/**\r\n * Proper state management for containers and the modals in those containers.\r\n *\r\n * @internal Used by the Modal to ensure proper styling of containers.\r\n */\n\n\nvar ModalManager = /*#__PURE__*/function () {\n  function ModalManager(_temp) {\n    var _ref = _temp === void 0 ? {} : _temp,\n        _ref$hideSiblingNodes = _ref.hideSiblingNodes,\n        hideSiblingNodes = _ref$hideSiblingNodes === void 0 ? true : _ref$hideSiblingNodes,\n        _ref$handleContainerO = _ref.handleContainerOverflow,\n        handleContainerOverflow = _ref$handleContainerO === void 0 ? true : _ref$handleContainerO;\n\n    this.hideSiblingNodes = void 0;\n    this.handleContainerOverflow = void 0;\n    this.modals = void 0;\n    this.containers = void 0;\n    this.data = void 0;\n    this.scrollbarSize = void 0;\n    this.hideSiblingNodes = hideSiblingNodes;\n    this.handleContainerOverflow = handleContainerOverflow;\n    this.modals = [];\n    this.containers = [];\n    this.data = [];\n    this.scrollbarSize = getScrollbarSize();\n  }\n\n  var _proto = ModalManager.prototype;\n\n  _proto.isContainerOverflowing = function isContainerOverflowing(modal) {\n    var data = this.data[this.containerIndexFromModal(modal)];\n    return data && data.overflowing;\n  };\n\n  _proto.containerIndexFromModal = function containerIndexFromModal(modal) {\n    return findIndexOf(this.data, function (d) {\n      return d.modals.indexOf(modal) !== -1;\n    });\n  };\n\n  _proto.setContainerStyle = function setContainerStyle(containerState, container) {\n    var style = {\n      overflow: 'hidden'\n    }; // we are only interested in the actual `style` here\n    // because we will override it\n\n    containerState.style = {\n      overflow: container.style.overflow,\n      paddingRight: container.style.paddingRight\n    };\n\n    if (containerState.overflowing) {\n      // use computed style, here to get the real padding\n      // to add our scrollbar width\n      style.paddingRight = parseInt(css(container, 'paddingRight') || '0', 10) + this.scrollbarSize + \"px\";\n    }\n\n    css(container, style);\n  };\n\n  _proto.removeContainerStyle = function removeContainerStyle(containerState, container) {\n    Object.assign(container.style, containerState.style);\n  };\n\n  _proto.add = function add(modal, container, className) {\n    var modalIdx = this.modals.indexOf(modal);\n    var containerIdx = this.containers.indexOf(container);\n\n    if (modalIdx !== -1) {\n      return modalIdx;\n    }\n\n    modalIdx = this.modals.length;\n    this.modals.push(modal);\n\n    if (this.hideSiblingNodes) {\n      hideSiblings(container, modal);\n    }\n\n    if (containerIdx !== -1) {\n      this.data[containerIdx].modals.push(modal);\n      return modalIdx;\n    }\n\n    var data = {\n      modals: [modal],\n      // right now only the first modal of a container will have its classes applied\n      classes: className ? className.split(/\\s+/) : [],\n      overflowing: isOverflowing(container)\n    };\n\n    if (this.handleContainerOverflow) {\n      this.setContainerStyle(data, container);\n    }\n\n    data.classes.forEach(addClass.bind(null, container));\n    this.containers.push(container);\n    this.data.push(data);\n    return modalIdx;\n  };\n\n  _proto.remove = function remove(modal) {\n    var modalIdx = this.modals.indexOf(modal);\n\n    if (modalIdx === -1) {\n      return;\n    }\n\n    var containerIdx = this.containerIndexFromModal(modal);\n    var data = this.data[containerIdx];\n    var container = this.containers[containerIdx];\n    data.modals.splice(data.modals.indexOf(modal), 1);\n    this.modals.splice(modalIdx, 1); // if that was the last modal in a container,\n    // clean up the container\n\n    if (data.modals.length === 0) {\n      data.classes.forEach(removeClass.bind(null, container));\n\n      if (this.handleContainerOverflow) {\n        this.removeContainerStyle(data, container);\n      }\n\n      if (this.hideSiblingNodes) {\n        showSiblings(container, modal);\n      }\n\n      this.containers.splice(containerIdx, 1);\n      this.data.splice(containerIdx, 1);\n    } else if (this.hideSiblingNodes) {\n      // otherwise make sure the next top modal is visible to a SR\n      var _data$modals = data.modals[data.modals.length - 1],\n          backdrop = _data$modals.backdrop,\n          dialog = _data$modals.dialog;\n      ariaHidden(false, dialog);\n      ariaHidden(false, backdrop);\n    }\n  };\n\n  _proto.isTopModal = function isTopModal(modal) {\n    return !!this.modals.length && this.modals[this.modals.length - 1] === modal;\n  };\n\n  return ModalManager;\n}();\n\nexport default ModalManager;","map":{"version":3,"names":["addClass","removeClass","css","getScrollbarSize","isOverflowing","ariaHidden","hideSiblings","showSiblings","findIndexOf","arr","cb","idx","some","d","i","ModalManager","_temp","_ref","_ref$hideSiblingNodes","hideSiblingNodes","_ref$handleContainerO","handleContainerOverflow","modals","containers","data","scrollbarSize","_proto","prototype","isContainerOverflowing","modal","containerIndexFromModal","overflowing","indexOf","setContainerStyle","containerState","container","style","overflow","paddingRight","parseInt","removeContainerStyle","Object","assign","add","className","modalIdx","containerIdx","length","push","classes","split","forEach","bind","remove","splice","_data$modals","backdrop","dialog","isTopModal"],"sources":["D:/razzak/React_Django_Ecommerce_Sara-Fashion/frontend/node_modules/react-overlays/esm/ModalManager.js"],"sourcesContent":["import addClass from 'dom-helpers/addClass';\r\nimport removeClass from 'dom-helpers/removeClass';\r\nimport css from 'dom-helpers/css';\r\nimport getScrollbarSize from 'dom-helpers/scrollbarSize';\r\nimport isOverflowing from './isOverflowing';\r\nimport { ariaHidden, hideSiblings, showSiblings } from './manageAriaHidden';\r\n\r\nfunction findIndexOf(arr, cb) {\r\n  var idx = -1;\r\n  arr.some(function (d, i) {\r\n    if (cb(d, i)) {\r\n      idx = i;\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  });\r\n  return idx;\r\n}\r\n\r\n/**\r\n * Proper state management for containers and the modals in those containers.\r\n *\r\n * @internal Used by the Modal to ensure proper styling of containers.\r\n */\r\nvar ModalManager = /*#__PURE__*/function () {\r\n  function ModalManager(_temp) {\r\n    var _ref = _temp === void 0 ? {} : _temp,\r\n        _ref$hideSiblingNodes = _ref.hideSiblingNodes,\r\n        hideSiblingNodes = _ref$hideSiblingNodes === void 0 ? true : _ref$hideSiblingNodes,\r\n        _ref$handleContainerO = _ref.handleContainerOverflow,\r\n        handleContainerOverflow = _ref$handleContainerO === void 0 ? true : _ref$handleContainerO;\r\n\r\n    this.hideSiblingNodes = void 0;\r\n    this.handleContainerOverflow = void 0;\r\n    this.modals = void 0;\r\n    this.containers = void 0;\r\n    this.data = void 0;\r\n    this.scrollbarSize = void 0;\r\n    this.hideSiblingNodes = hideSiblingNodes;\r\n    this.handleContainerOverflow = handleContainerOverflow;\r\n    this.modals = [];\r\n    this.containers = [];\r\n    this.data = [];\r\n    this.scrollbarSize = getScrollbarSize();\r\n  }\r\n\r\n  var _proto = ModalManager.prototype;\r\n\r\n  _proto.isContainerOverflowing = function isContainerOverflowing(modal) {\r\n    var data = this.data[this.containerIndexFromModal(modal)];\r\n    return data && data.overflowing;\r\n  };\r\n\r\n  _proto.containerIndexFromModal = function containerIndexFromModal(modal) {\r\n    return findIndexOf(this.data, function (d) {\r\n      return d.modals.indexOf(modal) !== -1;\r\n    });\r\n  };\r\n\r\n  _proto.setContainerStyle = function setContainerStyle(containerState, container) {\r\n    var style = {\r\n      overflow: 'hidden'\r\n    }; // we are only interested in the actual `style` here\r\n    // because we will override it\r\n\r\n    containerState.style = {\r\n      overflow: container.style.overflow,\r\n      paddingRight: container.style.paddingRight\r\n    };\r\n\r\n    if (containerState.overflowing) {\r\n      // use computed style, here to get the real padding\r\n      // to add our scrollbar width\r\n      style.paddingRight = parseInt(css(container, 'paddingRight') || '0', 10) + this.scrollbarSize + \"px\";\r\n    }\r\n\r\n    css(container, style);\r\n  };\r\n\r\n  _proto.removeContainerStyle = function removeContainerStyle(containerState, container) {\r\n    Object.assign(container.style, containerState.style);\r\n  };\r\n\r\n  _proto.add = function add(modal, container, className) {\r\n    var modalIdx = this.modals.indexOf(modal);\r\n    var containerIdx = this.containers.indexOf(container);\r\n\r\n    if (modalIdx !== -1) {\r\n      return modalIdx;\r\n    }\r\n\r\n    modalIdx = this.modals.length;\r\n    this.modals.push(modal);\r\n\r\n    if (this.hideSiblingNodes) {\r\n      hideSiblings(container, modal);\r\n    }\r\n\r\n    if (containerIdx !== -1) {\r\n      this.data[containerIdx].modals.push(modal);\r\n      return modalIdx;\r\n    }\r\n\r\n    var data = {\r\n      modals: [modal],\r\n      // right now only the first modal of a container will have its classes applied\r\n      classes: className ? className.split(/\\s+/) : [],\r\n      overflowing: isOverflowing(container)\r\n    };\r\n\r\n    if (this.handleContainerOverflow) {\r\n      this.setContainerStyle(data, container);\r\n    }\r\n\r\n    data.classes.forEach(addClass.bind(null, container));\r\n    this.containers.push(container);\r\n    this.data.push(data);\r\n    return modalIdx;\r\n  };\r\n\r\n  _proto.remove = function remove(modal) {\r\n    var modalIdx = this.modals.indexOf(modal);\r\n\r\n    if (modalIdx === -1) {\r\n      return;\r\n    }\r\n\r\n    var containerIdx = this.containerIndexFromModal(modal);\r\n    var data = this.data[containerIdx];\r\n    var container = this.containers[containerIdx];\r\n    data.modals.splice(data.modals.indexOf(modal), 1);\r\n    this.modals.splice(modalIdx, 1); // if that was the last modal in a container,\r\n    // clean up the container\r\n\r\n    if (data.modals.length === 0) {\r\n      data.classes.forEach(removeClass.bind(null, container));\r\n\r\n      if (this.handleContainerOverflow) {\r\n        this.removeContainerStyle(data, container);\r\n      }\r\n\r\n      if (this.hideSiblingNodes) {\r\n        showSiblings(container, modal);\r\n      }\r\n\r\n      this.containers.splice(containerIdx, 1);\r\n      this.data.splice(containerIdx, 1);\r\n    } else if (this.hideSiblingNodes) {\r\n      // otherwise make sure the next top modal is visible to a SR\r\n      var _data$modals = data.modals[data.modals.length - 1],\r\n          backdrop = _data$modals.backdrop,\r\n          dialog = _data$modals.dialog;\r\n      ariaHidden(false, dialog);\r\n      ariaHidden(false, backdrop);\r\n    }\r\n  };\r\n\r\n  _proto.isTopModal = function isTopModal(modal) {\r\n    return !!this.modals.length && this.modals[this.modals.length - 1] === modal;\r\n  };\r\n\r\n  return ModalManager;\r\n}();\r\n\r\nexport default ModalManager;"],"mappings":"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"},"metadata":{},"sourceType":"module"}