{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"as\", \"onSelect\", \"activeKey\", \"role\", \"onKeyDown\"];\nimport qsa from 'dom-helpers/querySelectorAll';\nimport React, { useContext, useEffect, useRef } from 'react';\nimport useForceUpdate from '@restart/hooks/useForceUpdate';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport NavContext from './NavContext';\nimport SelectableContext, { makeEventKey } from './SelectableContext';\nimport TabContext from './TabContext'; // eslint-disable-next-line @typescript-eslint/no-empty-function\n\nvar noop = function noop() {};\n\nvar AbstractNav = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'ul' : _ref$as,\n      onSelect = _ref.onSelect,\n      activeKey = _ref.activeKey,\n      role = _ref.role,\n      onKeyDown = _ref.onKeyDown,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded); // A ref and forceUpdate for refocus, b/c we only want to trigger when needed\n  // and don't want to reset the set in the effect\n\n\n  var forceUpdate = useForceUpdate();\n  var needsRefocusRef = useRef(false);\n  var parentOnSelect = useContext(SelectableContext);\n  var tabContext = useContext(TabContext);\n  var getControlledId, getControllerId;\n\n  if (tabContext) {\n    role = role || 'tablist';\n    activeKey = tabContext.activeKey;\n    getControlledId = tabContext.getControlledId;\n    getControllerId = tabContext.getControllerId;\n  }\n\n  var listNode = useRef(null);\n\n  var getNextActiveChild = function getNextActiveChild(offset) {\n    var currentListNode = listNode.current;\n    if (!currentListNode) return null;\n    var items = qsa(currentListNode, '[data-rb-event-key]:not(.disabled)');\n    var activeChild = currentListNode.querySelector('.active');\n    if (!activeChild) return null;\n    var index = items.indexOf(activeChild);\n    if (index === -1) return null;\n    var nextIndex = index + offset;\n    if (nextIndex >= items.length) nextIndex = 0;\n    if (nextIndex < 0) nextIndex = items.length - 1;\n    return items[nextIndex];\n  };\n\n  var handleSelect = function handleSelect(key, event) {\n    if (key == null) return;\n    if (onSelect) onSelect(key, event);\n    if (parentOnSelect) parentOnSelect(key, event);\n  };\n\n  var handleKeyDown = function handleKeyDown(event) {\n    if (onKeyDown) onKeyDown(event);\n    var nextActiveChild;\n\n    switch (event.key) {\n      case 'ArrowLeft':\n      case 'ArrowUp':\n        nextActiveChild = getNextActiveChild(-1);\n        break;\n\n      case 'ArrowRight':\n      case 'ArrowDown':\n        nextActiveChild = getNextActiveChild(1);\n        break;\n\n      default:\n        return;\n    }\n\n    if (!nextActiveChild) return;\n    event.preventDefault();\n    handleSelect(nextActiveChild.dataset.rbEventKey, event);\n    needsRefocusRef.current = true;\n    forceUpdate();\n  };\n\n  useEffect(function () {\n    if (listNode.current && needsRefocusRef.current) {\n      var activeChild = listNode.current.querySelector('[data-rb-event-key].active');\n      if (activeChild) activeChild.focus();\n    }\n\n    needsRefocusRef.current = false;\n  });\n  var mergedRef = useMergedRefs(ref, listNode);\n  return /*#__PURE__*/React.createElement(SelectableContext.Provider, {\n    value: handleSelect\n  }, /*#__PURE__*/React.createElement(NavContext.Provider, {\n    value: {\n      role: role,\n      // used by NavLink to determine it's role\n      activeKey: makeEventKey(activeKey),\n      getControlledId: getControlledId || noop,\n      getControllerId: getControllerId || noop\n    }\n  }, /*#__PURE__*/React.createElement(Component, _extends({}, props, {\n    onKeyDown: handleKeyDown,\n    ref: mergedRef,\n    role: role\n  }))));\n});\nexport default AbstractNav;","map":{"version":3,"names":["_extends","_objectWithoutPropertiesLoose","_excluded","qsa","React","useContext","useEffect","useRef","useForceUpdate","useMergedRefs","NavContext","SelectableContext","makeEventKey","TabContext","noop","AbstractNav","forwardRef","_ref","ref","_ref$as","as","Component","onSelect","activeKey","role","onKeyDown","props","forceUpdate","needsRefocusRef","parentOnSelect","tabContext","getControlledId","getControllerId","listNode","getNextActiveChild","offset","currentListNode","current","items","activeChild","querySelector","index","indexOf","nextIndex","length","handleSelect","key","event","handleKeyDown","nextActiveChild","preventDefault","dataset","rbEventKey","focus","mergedRef","createElement","Provider","value"],"sources":["F:/Web Development/Full-Stack/ECOMMERCE/Sara-Fashion/frontend/node_modules/react-bootstrap/esm/AbstractNav.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"as\", \"onSelect\", \"activeKey\", \"role\", \"onKeyDown\"];\nimport qsa from 'dom-helpers/querySelectorAll';\nimport React, { useContext, useEffect, useRef } from 'react';\nimport useForceUpdate from '@restart/hooks/useForceUpdate';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport NavContext from './NavContext';\nimport SelectableContext, { makeEventKey } from './SelectableContext';\nimport TabContext from './TabContext';\n\n// eslint-disable-next-line @typescript-eslint/no-empty-function\nvar noop = function noop() {};\n\nvar AbstractNav = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'ul' : _ref$as,\n      onSelect = _ref.onSelect,\n      activeKey = _ref.activeKey,\n      role = _ref.role,\n      onKeyDown = _ref.onKeyDown,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  // A ref and forceUpdate for refocus, b/c we only want to trigger when needed\n  // and don't want to reset the set in the effect\n  var forceUpdate = useForceUpdate();\n  var needsRefocusRef = useRef(false);\n  var parentOnSelect = useContext(SelectableContext);\n  var tabContext = useContext(TabContext);\n  var getControlledId, getControllerId;\n\n  if (tabContext) {\n    role = role || 'tablist';\n    activeKey = tabContext.activeKey;\n    getControlledId = tabContext.getControlledId;\n    getControllerId = tabContext.getControllerId;\n  }\n\n  var listNode = useRef(null);\n\n  var getNextActiveChild = function getNextActiveChild(offset) {\n    var currentListNode = listNode.current;\n    if (!currentListNode) return null;\n    var items = qsa(currentListNode, '[data-rb-event-key]:not(.disabled)');\n    var activeChild = currentListNode.querySelector('.active');\n    if (!activeChild) return null;\n    var index = items.indexOf(activeChild);\n    if (index === -1) return null;\n    var nextIndex = index + offset;\n    if (nextIndex >= items.length) nextIndex = 0;\n    if (nextIndex < 0) nextIndex = items.length - 1;\n    return items[nextIndex];\n  };\n\n  var handleSelect = function handleSelect(key, event) {\n    if (key == null) return;\n    if (onSelect) onSelect(key, event);\n    if (parentOnSelect) parentOnSelect(key, event);\n  };\n\n  var handleKeyDown = function handleKeyDown(event) {\n    if (onKeyDown) onKeyDown(event);\n    var nextActiveChild;\n\n    switch (event.key) {\n      case 'ArrowLeft':\n      case 'ArrowUp':\n        nextActiveChild = getNextActiveChild(-1);\n        break;\n\n      case 'ArrowRight':\n      case 'ArrowDown':\n        nextActiveChild = getNextActiveChild(1);\n        break;\n\n      default:\n        return;\n    }\n\n    if (!nextActiveChild) return;\n    event.preventDefault();\n    handleSelect(nextActiveChild.dataset.rbEventKey, event);\n    needsRefocusRef.current = true;\n    forceUpdate();\n  };\n\n  useEffect(function () {\n    if (listNode.current && needsRefocusRef.current) {\n      var activeChild = listNode.current.querySelector('[data-rb-event-key].active');\n      if (activeChild) activeChild.focus();\n    }\n\n    needsRefocusRef.current = false;\n  });\n  var mergedRef = useMergedRefs(ref, listNode);\n  return /*#__PURE__*/React.createElement(SelectableContext.Provider, {\n    value: handleSelect\n  }, /*#__PURE__*/React.createElement(NavContext.Provider, {\n    value: {\n      role: role,\n      // used by NavLink to determine it's role\n      activeKey: makeEventKey(activeKey),\n      getControlledId: getControlledId || noop,\n      getControllerId: getControllerId || noop\n    }\n  }, /*#__PURE__*/React.createElement(Component, _extends({}, props, {\n    onKeyDown: handleKeyDown,\n    ref: mergedRef,\n    role: role\n  }))));\n});\nexport default AbstractNav;"],"mappings":"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"},"metadata":{},"sourceType":"module"}