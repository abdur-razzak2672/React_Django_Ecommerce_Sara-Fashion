{"ast":null,"code":"import { useMemo, useRef } from 'react';\nimport useMounted from './useMounted';\nimport useWillUnmount from './useWillUnmount';\n/*\r\n * Browsers including Internet Explorer, Chrome, Safari, and Firefox store the\r\n * delay as a 32-bit signed integer internally. This causes an integer overflow\r\n * when using delays larger than 2,147,483,647 ms (about 24.8 days),\r\n * resulting in the timeout being executed immediately.\r\n *\r\n * via: https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/setTimeout\r\n */\n\nvar MAX_DELAY_MS = Math.pow(2, 31) - 1;\n\nfunction setChainedTimeout(handleRef, fn, timeoutAtMs) {\n  var delayMs = timeoutAtMs - Date.now();\n  handleRef.current = delayMs <= MAX_DELAY_MS ? setTimeout(fn, delayMs) : setTimeout(function () {\n    return setChainedTimeout(handleRef, fn, timeoutAtMs);\n  }, MAX_DELAY_MS);\n}\n/**\r\n * Returns a controller object for setting a timeout that is properly cleaned up\r\n * once the component unmounts. New timeouts cancel and replace existing ones.\r\n *\r\n *\r\n *\r\n * ```tsx\r\n * const { set, clear } = useTimeout();\r\n * const [hello, showHello] = useState(false);\r\n * //Display hello after 5 seconds\r\n * set(() => showHello(true), 5000);\r\n * return (\r\n *   <div className=\"App\">\r\n *     {hello ? <h3>Hello</h3> : null}\r\n *   </div>\r\n * );\r\n * ```\r\n */\n\n\nexport default function useTimeout() {\n  var isMounted = useMounted(); // types are confused between node and web here IDK\n\n  var handleRef = useRef();\n  useWillUnmount(function () {\n    return clearTimeout(handleRef.current);\n  });\n  return useMemo(function () {\n    var clear = function clear() {\n      return clearTimeout(handleRef.current);\n    };\n\n    function set(fn, delayMs) {\n      if (delayMs === void 0) {\n        delayMs = 0;\n      }\n\n      if (!isMounted()) return;\n      clear();\n\n      if (delayMs <= MAX_DELAY_MS) {\n        // For simplicity, if the timeout is short, just set a normal timeout.\n        handleRef.current = setTimeout(fn, delayMs);\n      } else {\n        setChainedTimeout(handleRef, fn, Date.now() + delayMs);\n      }\n    }\n\n    return {\n      set: set,\n      clear: clear\n    };\n  }, []);\n}","map":{"version":3,"names":["useMemo","useRef","useMounted","useWillUnmount","MAX_DELAY_MS","Math","pow","setChainedTimeout","handleRef","fn","timeoutAtMs","delayMs","Date","now","current","setTimeout","useTimeout","isMounted","clearTimeout","clear","set"],"sources":["D:/razzak/React_Django_Ecommerce_Sara-Fashion/frontend/node_modules/@restart/hooks/esm/useTimeout.js"],"sourcesContent":["import { useMemo, useRef } from 'react';\r\nimport useMounted from './useMounted';\r\nimport useWillUnmount from './useWillUnmount';\r\n/*\r\n * Browsers including Internet Explorer, Chrome, Safari, and Firefox store the\r\n * delay as a 32-bit signed integer internally. This causes an integer overflow\r\n * when using delays larger than 2,147,483,647 ms (about 24.8 days),\r\n * resulting in the timeout being executed immediately.\r\n *\r\n * via: https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/setTimeout\r\n */\r\n\r\nvar MAX_DELAY_MS = Math.pow(2, 31) - 1;\r\n\r\nfunction setChainedTimeout(handleRef, fn, timeoutAtMs) {\r\n  var delayMs = timeoutAtMs - Date.now();\r\n  handleRef.current = delayMs <= MAX_DELAY_MS ? setTimeout(fn, delayMs) : setTimeout(function () {\r\n    return setChainedTimeout(handleRef, fn, timeoutAtMs);\r\n  }, MAX_DELAY_MS);\r\n}\r\n/**\r\n * Returns a controller object for setting a timeout that is properly cleaned up\r\n * once the component unmounts. New timeouts cancel and replace existing ones.\r\n *\r\n *\r\n *\r\n * ```tsx\r\n * const { set, clear } = useTimeout();\r\n * const [hello, showHello] = useState(false);\r\n * //Display hello after 5 seconds\r\n * set(() => showHello(true), 5000);\r\n * return (\r\n *   <div className=\"App\">\r\n *     {hello ? <h3>Hello</h3> : null}\r\n *   </div>\r\n * );\r\n * ```\r\n */\r\n\r\n\r\nexport default function useTimeout() {\r\n  var isMounted = useMounted(); // types are confused between node and web here IDK\r\n\r\n  var handleRef = useRef();\r\n  useWillUnmount(function () {\r\n    return clearTimeout(handleRef.current);\r\n  });\r\n  return useMemo(function () {\r\n    var clear = function clear() {\r\n      return clearTimeout(handleRef.current);\r\n    };\r\n\r\n    function set(fn, delayMs) {\r\n      if (delayMs === void 0) {\r\n        delayMs = 0;\r\n      }\r\n\r\n      if (!isMounted()) return;\r\n      clear();\r\n\r\n      if (delayMs <= MAX_DELAY_MS) {\r\n        // For simplicity, if the timeout is short, just set a normal timeout.\r\n        handleRef.current = setTimeout(fn, delayMs);\r\n      } else {\r\n        setChainedTimeout(handleRef, fn, Date.now() + delayMs);\r\n      }\r\n    }\r\n\r\n    return {\r\n      set: set,\r\n      clear: clear\r\n    };\r\n  }, []);\r\n}"],"mappings":"AAAA,SAASA,OAAT,EAAkBC,MAAlB,QAAgC,OAAhC;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIC,YAAY,GAAGC,IAAI,CAACC,GAAL,CAAS,CAAT,EAAY,EAAZ,IAAkB,CAArC;;AAEA,SAASC,iBAAT,CAA2BC,SAA3B,EAAsCC,EAAtC,EAA0CC,WAA1C,EAAuD;EACrD,IAAIC,OAAO,GAAGD,WAAW,GAAGE,IAAI,CAACC,GAAL,EAA5B;EACAL,SAAS,CAACM,OAAV,GAAoBH,OAAO,IAAIP,YAAX,GAA0BW,UAAU,CAACN,EAAD,EAAKE,OAAL,CAApC,GAAoDI,UAAU,CAAC,YAAY;IAC7F,OAAOR,iBAAiB,CAACC,SAAD,EAAYC,EAAZ,EAAgBC,WAAhB,CAAxB;EACD,CAFiF,EAE/EN,YAF+E,CAAlF;AAGD;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,eAAe,SAASY,UAAT,GAAsB;EACnC,IAAIC,SAAS,GAAGf,UAAU,EAA1B,CADmC,CACL;;EAE9B,IAAIM,SAAS,GAAGP,MAAM,EAAtB;EACAE,cAAc,CAAC,YAAY;IACzB,OAAOe,YAAY,CAACV,SAAS,CAACM,OAAX,CAAnB;EACD,CAFa,CAAd;EAGA,OAAOd,OAAO,CAAC,YAAY;IACzB,IAAImB,KAAK,GAAG,SAASA,KAAT,GAAiB;MAC3B,OAAOD,YAAY,CAACV,SAAS,CAACM,OAAX,CAAnB;IACD,CAFD;;IAIA,SAASM,GAAT,CAAaX,EAAb,EAAiBE,OAAjB,EAA0B;MACxB,IAAIA,OAAO,KAAK,KAAK,CAArB,EAAwB;QACtBA,OAAO,GAAG,CAAV;MACD;;MAED,IAAI,CAACM,SAAS,EAAd,EAAkB;MAClBE,KAAK;;MAEL,IAAIR,OAAO,IAAIP,YAAf,EAA6B;QAC3B;QACAI,SAAS,CAACM,OAAV,GAAoBC,UAAU,CAACN,EAAD,EAAKE,OAAL,CAA9B;MACD,CAHD,MAGO;QACLJ,iBAAiB,CAACC,SAAD,EAAYC,EAAZ,EAAgBG,IAAI,CAACC,GAAL,KAAaF,OAA7B,CAAjB;MACD;IACF;;IAED,OAAO;MACLS,GAAG,EAAEA,GADA;MAELD,KAAK,EAAEA;IAFF,CAAP;EAID,CAzBa,EAyBX,EAzBW,CAAd;AA0BD"},"metadata":{},"sourceType":"module"}