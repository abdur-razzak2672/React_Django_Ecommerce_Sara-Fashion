{"ast":null,"code":"import { useMemo } from 'react';\n\nvar toFnRef = function toFnRef(ref) {\n  return !ref || typeof ref === 'function' ? ref : function (value) {\n    ref.current = value;\n  };\n};\n\nexport function mergeRefs(refA, refB) {\n  var a = toFnRef(refA);\n  var b = toFnRef(refB);\n  return function (value) {\n    if (a) a(value);\n    if (b) b(value);\n  };\n}\n/**\r\n * Create and returns a single callback ref composed from two other Refs.\r\n *\r\n * ```tsx\r\n * const Button = React.forwardRef((props, ref) => {\r\n *   const [element, attachRef] = useCallbackRef<HTMLButtonElement>();\r\n *   const mergedRef = useMergedRefs(ref, attachRef);\r\n *\r\n *   return <button ref={mergedRef} {...props}/>\r\n * })\r\n * ```\r\n *\r\n * @param refA A Callback or mutable Ref\r\n * @param refB A Callback or mutable Ref\r\n * @category refs\r\n */\n\nfunction useMergedRefs(refA, refB) {\n  return useMemo(function () {\n    return mergeRefs(refA, refB);\n  }, [refA, refB]);\n}\n\nexport default useMergedRefs;","map":{"version":3,"names":["useMemo","toFnRef","ref","value","current","mergeRefs","refA","refB","a","b","useMergedRefs"],"sources":["D:/razzak/React_Django_Ecommerce_Sara-Fashion/frontend/node_modules/@restart/hooks/esm/useMergedRefs.js"],"sourcesContent":["import { useMemo } from 'react';\r\n\r\nvar toFnRef = function toFnRef(ref) {\r\n  return !ref || typeof ref === 'function' ? ref : function (value) {\r\n    ref.current = value;\r\n  };\r\n};\r\n\r\nexport function mergeRefs(refA, refB) {\r\n  var a = toFnRef(refA);\r\n  var b = toFnRef(refB);\r\n  return function (value) {\r\n    if (a) a(value);\r\n    if (b) b(value);\r\n  };\r\n}\r\n/**\r\n * Create and returns a single callback ref composed from two other Refs.\r\n *\r\n * ```tsx\r\n * const Button = React.forwardRef((props, ref) => {\r\n *   const [element, attachRef] = useCallbackRef<HTMLButtonElement>();\r\n *   const mergedRef = useMergedRefs(ref, attachRef);\r\n *\r\n *   return <button ref={mergedRef} {...props}/>\r\n * })\r\n * ```\r\n *\r\n * @param refA A Callback or mutable Ref\r\n * @param refB A Callback or mutable Ref\r\n * @category refs\r\n */\r\n\r\nfunction useMergedRefs(refA, refB) {\r\n  return useMemo(function () {\r\n    return mergeRefs(refA, refB);\r\n  }, [refA, refB]);\r\n}\r\n\r\nexport default useMergedRefs;"],"mappings":"AAAA,SAASA,OAAT,QAAwB,OAAxB;;AAEA,IAAIC,OAAO,GAAG,SAASA,OAAT,CAAiBC,GAAjB,EAAsB;EAClC,OAAO,CAACA,GAAD,IAAQ,OAAOA,GAAP,KAAe,UAAvB,GAAoCA,GAApC,GAA0C,UAAUC,KAAV,EAAiB;IAChED,GAAG,CAACE,OAAJ,GAAcD,KAAd;EACD,CAFD;AAGD,CAJD;;AAMA,OAAO,SAASE,SAAT,CAAmBC,IAAnB,EAAyBC,IAAzB,EAA+B;EACpC,IAAIC,CAAC,GAAGP,OAAO,CAACK,IAAD,CAAf;EACA,IAAIG,CAAC,GAAGR,OAAO,CAACM,IAAD,CAAf;EACA,OAAO,UAAUJ,KAAV,EAAiB;IACtB,IAAIK,CAAJ,EAAOA,CAAC,CAACL,KAAD,CAAD;IACP,IAAIM,CAAJ,EAAOA,CAAC,CAACN,KAAD,CAAD;EACR,CAHD;AAID;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASO,aAAT,CAAuBJ,IAAvB,EAA6BC,IAA7B,EAAmC;EACjC,OAAOP,OAAO,CAAC,YAAY;IACzB,OAAOK,SAAS,CAACC,IAAD,EAAOC,IAAP,CAAhB;EACD,CAFa,EAEX,CAACD,IAAD,EAAOC,IAAP,CAFW,CAAd;AAGD;;AAED,eAAeG,aAAf"},"metadata":{},"sourceType":"module"}