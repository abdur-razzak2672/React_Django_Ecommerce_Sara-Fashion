{"ast":null,"code":"import { useEffect } from 'react';\nimport useCommittedRef from './useCommittedRef';\n/**\r\n * Creates a `setInterval` that is properly cleaned up when a component unmounted\r\n *\r\n * ```tsx\r\n *  function Timer() {\r\n *    const [timer, setTimer] = useState(0)\r\n *    useInterval(() => setTimer(i => i + 1), 1000)\r\n *\r\n *    return <span>{timer} seconds past</span>\r\n *  }\r\n * ```\r\n *\r\n * @param fn an function run on each interval\r\n * @param ms The milliseconds duration of the interval\r\n */\n\nfunction useInterval(fn, ms, paused, runImmediately) {\n  if (paused === void 0) {\n    paused = false;\n  }\n\n  if (runImmediately === void 0) {\n    runImmediately = false;\n  }\n\n  var handle;\n  var fnRef = useCommittedRef(fn); // this ref is necessary b/c useEffect will sometimes miss a paused toggle\n  // orphaning a setTimeout chain in the aether, so relying on it's refresh logic is not reliable.\n\n  var pausedRef = useCommittedRef(paused);\n\n  var tick = function tick() {\n    if (pausedRef.current) return;\n    fnRef.current();\n    schedule(); // eslint-disable-line no-use-before-define\n  };\n\n  var schedule = function schedule() {\n    clearTimeout(handle);\n    handle = setTimeout(tick, ms);\n  };\n\n  useEffect(function () {\n    if (runImmediately) {\n      tick();\n    } else {\n      schedule();\n    }\n\n    return function () {\n      return clearTimeout(handle);\n    };\n  }, [paused, runImmediately]);\n}\n\nexport default useInterval;","map":{"version":3,"names":["useEffect","useCommittedRef","useInterval","fn","ms","paused","runImmediately","handle","fnRef","pausedRef","tick","current","schedule","clearTimeout","setTimeout"],"sources":["D:/razzak/React_Django_Ecommerce_Sara-Fashion/frontend/node_modules/@restart/hooks/esm/useInterval.js"],"sourcesContent":["import { useEffect } from 'react';\r\nimport useCommittedRef from './useCommittedRef';\r\n/**\r\n * Creates a `setInterval` that is properly cleaned up when a component unmounted\r\n *\r\n * ```tsx\r\n *  function Timer() {\r\n *    const [timer, setTimer] = useState(0)\r\n *    useInterval(() => setTimer(i => i + 1), 1000)\r\n *\r\n *    return <span>{timer} seconds past</span>\r\n *  }\r\n * ```\r\n *\r\n * @param fn an function run on each interval\r\n * @param ms The milliseconds duration of the interval\r\n */\r\n\r\nfunction useInterval(fn, ms, paused, runImmediately) {\r\n  if (paused === void 0) {\r\n    paused = false;\r\n  }\r\n\r\n  if (runImmediately === void 0) {\r\n    runImmediately = false;\r\n  }\r\n\r\n  var handle;\r\n  var fnRef = useCommittedRef(fn); // this ref is necessary b/c useEffect will sometimes miss a paused toggle\r\n  // orphaning a setTimeout chain in the aether, so relying on it's refresh logic is not reliable.\r\n\r\n  var pausedRef = useCommittedRef(paused);\r\n\r\n  var tick = function tick() {\r\n    if (pausedRef.current) return;\r\n    fnRef.current();\r\n    schedule(); // eslint-disable-line no-use-before-define\r\n  };\r\n\r\n  var schedule = function schedule() {\r\n    clearTimeout(handle);\r\n    handle = setTimeout(tick, ms);\r\n  };\r\n\r\n  useEffect(function () {\r\n    if (runImmediately) {\r\n      tick();\r\n    } else {\r\n      schedule();\r\n    }\r\n\r\n    return function () {\r\n      return clearTimeout(handle);\r\n    };\r\n  }, [paused, runImmediately]);\r\n}\r\n\r\nexport default useInterval;"],"mappings":"AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASC,WAAT,CAAqBC,EAArB,EAAyBC,EAAzB,EAA6BC,MAA7B,EAAqCC,cAArC,EAAqD;EACnD,IAAID,MAAM,KAAK,KAAK,CAApB,EAAuB;IACrBA,MAAM,GAAG,KAAT;EACD;;EAED,IAAIC,cAAc,KAAK,KAAK,CAA5B,EAA+B;IAC7BA,cAAc,GAAG,KAAjB;EACD;;EAED,IAAIC,MAAJ;EACA,IAAIC,KAAK,GAAGP,eAAe,CAACE,EAAD,CAA3B,CAVmD,CAUlB;EACjC;;EAEA,IAAIM,SAAS,GAAGR,eAAe,CAACI,MAAD,CAA/B;;EAEA,IAAIK,IAAI,GAAG,SAASA,IAAT,GAAgB;IACzB,IAAID,SAAS,CAACE,OAAd,EAAuB;IACvBH,KAAK,CAACG,OAAN;IACAC,QAAQ,GAHiB,CAGb;EACb,CAJD;;EAMA,IAAIA,QAAQ,GAAG,SAASA,QAAT,GAAoB;IACjCC,YAAY,CAACN,MAAD,CAAZ;IACAA,MAAM,GAAGO,UAAU,CAACJ,IAAD,EAAON,EAAP,CAAnB;EACD,CAHD;;EAKAJ,SAAS,CAAC,YAAY;IACpB,IAAIM,cAAJ,EAAoB;MAClBI,IAAI;IACL,CAFD,MAEO;MACLE,QAAQ;IACT;;IAED,OAAO,YAAY;MACjB,OAAOC,YAAY,CAACN,MAAD,CAAnB;IACD,CAFD;EAGD,CAVQ,EAUN,CAACF,MAAD,EAASC,cAAT,CAVM,CAAT;AAWD;;AAED,eAAeJ,WAAf"},"metadata":{},"sourceType":"module"}